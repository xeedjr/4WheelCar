//.$file${.::BusinessLogicBase.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: BusinessLogicAO.qm
// File:  ${.::BusinessLogicBase.h}
//
// This code has been generated by QM 5.1.0 <www.state-machine.com/qm/>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//
//.$endhead${.::BusinessLogicBase.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#pragma once

#include "qpcpp.hpp" // QP/C++ framework API

namespace business_logic {

enum Signal
{
   BL_HART_BEAT_SIG = QP::Q_USER_SIG,
   BL_SET_IMU_SIG,
   BL_SET_ENCODERS_SIG,
   BL_COMMAND_SIG,
   BL_SET_US_SIG,
   BL_SET_WHEEL_POS_SIG,
   BL_SET_WHEEL_SPEED_SIG
};

};

//.$declare${business_logic::BusinessLogicBase} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
namespace business_logic {

//.${business_logic::BusinessLogicBase} ......................................
class BusinessLogicBase : public QP::QActive {
private:
    QP::QTimeEvt heartBeat_timeEvt= {this, BL_HART_BEAT_SIG, 0U};

protected:
    virtual void setImuHandler(QP::QEvt const * e) = 0;
    virtual void setEncodersHandler(QP::QEvt const * e) = 0;
    virtual void commandHandler() = 0;

public:
    BusinessLogicBase();

protected:
    virtual void setUSHandler(QP::QEvt const * e) = 0;
    virtual void setWheelsPosHandler(QP::QEvt const * e) = 0;
    virtual void setWheelsSpeedHandler(QP::QEvt const * e) = 0;
    virtual void heartBeat(QP::QEvt const * e) = 0;

protected:
    Q_STATE_DECL(initial);
    Q_STATE_DECL(idle);
};

} // namespace business_logic
//.$enddecl${business_logic::BusinessLogicBase} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
