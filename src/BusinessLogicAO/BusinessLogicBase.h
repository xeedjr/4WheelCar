//.$file${.::BusinessLogicBase.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: BusinessLogicAO.qm
// File:  ${.::BusinessLogicBase.h}
//
// This code has been generated by QM 5.1.0 <www.state-machine.com/qm/>.
// DO NOT EDIT SECTIONS BETWEEN THE COMMENTS "$...vvv".."$end...^^^".
// All your changes in these sections will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//
//.$endhead${.::BusinessLogicBase.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef BUSINESS_LOGIC_BASE_H_
#define BUSINESS_LOGIC_BASE_H_

#include "qpcpp.hpp"

namespace business_logic
{

typedef struct
{
    int32_t alpha;
    int32_t beta;
    int32_t gamma;
} ImuData;

typedef struct
{
    int32_t left;
    int32_t right;
} EncodersData;

enum Signal
{
   BL_SET_IMU_SIG = QP::Q_USER_SIG,
   BL_SET_ENCODERS_SIG,
   BL_COMMAND_SIG
};

struct Event : public QP::QEvt {
    union
    {
        ImuData imu;
        EncodersData encoders;
    } data;

    Event(QP::QSignal const s) : QEvt(s) {};
};

} // namespace business_logic

//.$declare${application::BusinessLogicBase} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
namespace business_logic {

//.${application::BusinessLogicBase} .........................................
class BusinessLogicBase : public QP::QActive {
protected:
    virtual void setImuHandler(Event const* event) = 0;
    virtual void setEncodersHandler(Event const* event) = 0;
    virtual void commandHandler() = 0;

public:
    BusinessLogicBase();

protected:
    Q_STATE_DECL(initial);
    Q_STATE_DECL(idle);
};

} // namespace business_logic
//.$enddecl${application::BusinessLogicBase} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif /* BUSINESS_LOGIC_BASE_H_ */
